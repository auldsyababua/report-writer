# agents/notifier_agent.py
import asyncio

async def handle_notify(task_details: str) -> str:
    """
    Writes a script for sending a notification.

    This agent specializes in communication platform APIs (Slack, Telegram, etc.).
    """
    print("ðŸ¤– Notifier Agent: Generating a notification script...")

    # Simulate the LLM generating a notification script
    simulated_notify_script = f"""
import os
import requests

# This script was generated by the Notifier Agent
# based on the task: '{task_details}'

def send_telegram_message(message: str):
    # In a real app, use environment variables for secrets
    bot_token = os.environ.get("TELEGRAM_BOT_TOKEN")
    chat_id = os.environ.get("TELEGRAM_CHAT_ID")
    
    if not bot_token or not chat_id:
        print("Error: TELEGRAM_BOT_TOKEN and TELEGRAM_CHAT_ID must be set.")
        return

    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    payload = {"chat_id": chat_id, "text": message, "parse_mode": "Markdown"}
    
    try:
        response = requests.post(url, json=payload, timeout=10)
        response.raise_for_status()
        print("Notification sent successfully!")
    except requests.exceptions.RequestException as e:
        print(f"Error sending notification: {e}")

if __name__ == "__main__":
    send_telegram_message("Hello from your automated agent!")
"""
    return f"âœ… NOTIFIER SCRIPT CREATED:\n\n```python\n{simulated_notify_script}\n```"